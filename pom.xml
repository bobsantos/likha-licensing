<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>app.likha</groupId>
    <artifactId>licensing-platform-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <name>Likha Licensing Platform</name>
    <description>Enterprise licensing software platform - Parent POM</description>
    
    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>21</java.version>
        <spring.boot.version>3.2.0</spring.boot.version>
        <spring-modulith.version>1.1.1</spring-modulith.version>
        <frontend.skip>false</frontend.skip>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.modulith</groupId>
                <artifactId>spring-modulith-bom</artifactId>
                <version>${spring-modulith.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <modules>
        <module>backend</module>
    </modules>
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <!-- Enforce Prerequisites -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-maven-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.8.1,)</version>
                                    <message>Maven 3.8.1 or higher is required.</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[21,)</version>
                                    <message>Java 21 or higher is required.</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>validate-root-structure</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireFilesExist>
                                    <files>
                                        <file>backend/pom.xml</file>
                                    </files>
                                    <message>Backend module not found. Expected: backend/pom.xml</message>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                        <inherited>false</inherited>
                    </execution>
                    <execution>
                        <id>validate-frontend-structure</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${frontend.skip}</skip>
                            <rules>
                                <requireFilesExist>
                                    <files>
                                        <file>frontend</file>
                                        <file>frontend/package.json</file>
                                    </files>
                                    <message>ERROR: Frontend directory structure is invalid!

Required files:
- frontend/ (directory)
- frontend/package.json (file)

Solutions:
1. To skip frontend build: mvn clean package -Dfrontend.skip=true
2. To set up frontend: cd frontend and run npm install
3. Check project structure matches the expected layout</message>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                        <inherited>false</inherited>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <!-- Development Profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>
        
        <!-- Production Profile -->
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
                <frontend.skip>false</frontend.skip>
            </properties>
        </profile>
        
        <!-- Backend Only Profile -->
        <profile>
            <id>backend-only</id>
            <properties>
                <frontend.skip>true</frontend.skip>
            </properties>
        </profile>
        
        <!-- CI/CD Profile -->
        <profile>
            <id>ci</id>
            <properties>
                <frontend.skip>false</frontend.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <includes>
                                <include>**/*Test.java</include>
                                <include>**/*Tests.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*IT.java</exclude>
                                <exclude>**/*IntegrationTest.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- IDE Development Profile (skips frontend for IDE compatibility) -->
        <profile>
            <id>ide</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <properties>
                <frontend.skip>true</frontend.skip>
            </properties>
        </profile>
    </profiles>
</project>